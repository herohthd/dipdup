# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Extra


class Admin(BaseModel):
    class Config:
        extra = Extra.forbid

    admin: str
    paused: bool
    pending_admin: Optional[str]


class Key(BaseModel):
    class Config:
        extra = Extra.forbid

    address: str
    nat: str


class LedgerItem(BaseModel):
    class Config:
        extra = Extra.forbid

    key: Key
    value: str


class Key1(BaseModel):
    class Config:
        extra = Extra.forbid

    address_0: str
    address_1: str
    nat: str


class Operator(BaseModel):
    class Config:
        extra = Extra.forbid

    key: Key1
    value: Dict[str, Any]


class TokenMetadata(BaseModel):
    class Config:
        extra = Extra.forbid

    token_id: str
    token_info: Dict[str, str]


class Assets(BaseModel):
    class Config:
        extra = Extra.forbid

    contract_operators: List[str]
    ledger: List[LedgerItem]
    next_token_id: str
    operators: List[Operator]
    token_metadata: Dict[str, TokenMetadata]
    token_total_supply: Dict[str, str]


class Fa2ContractJOKOStorage(BaseModel):
    class Config:
        extra = Extra.forbid

    admin: Admin
    assets: Assets
    metadata: Dict[str, str]
