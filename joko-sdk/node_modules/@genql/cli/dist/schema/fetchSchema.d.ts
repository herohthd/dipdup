import fetch from 'isomorphic-unfetch';
import { ExecutionResult } from 'graphql';
import { GraphQLSchemaValidationOptions } from 'graphql/type/schema';
import qs from 'qs';
export interface SchemaFetcher {
    (query: string, fetchImpl: typeof fetch, qsImpl: typeof qs): Promise<ExecutionResult>;
}
export declare const fetchSchema: ({ endpoint, usePost, headers, options, }: {
    endpoint: string;
    usePost: boolean;
    headers?: Record<string, string> | undefined;
    options?: GraphQLSchemaValidationOptions | undefined;
}) => Promise<import("graphql").GraphQLSchema>;
export declare const customFetchSchema: (fetcher: SchemaFetcher, options?: GraphQLSchemaValidationOptions | undefined) => Promise<import("graphql").GraphQLSchema>;
